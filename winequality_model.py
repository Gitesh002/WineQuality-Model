# -*- coding: utf-8 -*-
"""WineQuality Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WMrJ7JZR2qC8y7JRSAhB4e_ItkrqrkYL
"""

import tensorflow as tf
from tensorflow import keras
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error

df = pd.read_csv("winequality-white.csv",sep = ";")

X_train , X_test , y_train , y_test = train_test_split(df.drop("quality",axis = 1),df["quality"],test_size = 0.3, random_state = 42)
X_train.head()

# X_train = pd.read_csv("winequality-white.csv",sep = ";") # training data
# X_test = pd.read_csv("winequality-red.csv",sep = ";") # testing data
# y_train = X_train.pop('quality')
# y_test = X_test.pop('quality')

y_train.head()

# model = LinearRegression()
from sklearn.linear_model import Lasso
model = Lasso(alpha = 0.2)

model.fit(X_train, y_train)
model.score(X_test, y_test)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)  # Root Mean Squared Error
r2 = r2_score(y_test, y_pred)  # R-squared

# Print the evaluation metrics
print("Mean Squared Error:", mse)
print("Root Mean Squared Error:", rmse)
print("R-squared:", r2)

custom_data = np.array([[7.2,0.23,0.32,8.5,0.058,47,186,0.9956,3.19,0.4,9.9]])
# Make prediction
prediction = model.predict(custom_data)

print("Predicted value for custom input:", prediction)